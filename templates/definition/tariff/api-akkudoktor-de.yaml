template: api.akkudoktor.net
products:
  - brand: Akkudoktor API
requirements:
  description:
    en: "[Akkudoktor API](https://api.akkudoktor.net/) provides free solar production forecasts based on system specifications and location."
    de: "[Akkudoktor API](https://api.akkudoktor.net/) bietet kostenlos Solarproduktionsprognosen basierend auf Systemparametern und Standort."
  evcc: ["skiptest"]
group: solar
params:
  - name: lat
    description:
      en: Latitude
      de: Breitengrad
    type: float
    example: 50.65
    required: true
  - name: lon
    description:
      en: Longitude
      de: Längengrad
    type: float
    example: 11.37
    required: true
  - name: dec
    description:
      en: Decline
      de: Neigung
    help:
      en: Inclination angle of the PV modules in degrees. 0 = horizontal, 90 = vertical
      de: Neigungswinkel der PV-Module in Grad. 0 = horizontal, 90 = vertikal
    type: int
    example: 25
    required: true
  - name: az
    description:
      en: Azimuth
      de: Azimut
    help:
      en: Orientation of PV modules in azimuth in degree. -180 = north, -90 = east, 0 = south, 90 = west, 180 = north
      de: Ausrichtung der PV-Module im Azimut in Grad. -180 = Norden, -90 = Osten, 0 = Süden, 90 = Westen, 180 = Norden
    type: int
    example: 0
    required: true
  - name: kwp
    description:
      en: Maximum generator power [kWp]
      de: Maximale Generatorleistung [kWp]
    type: float
    example: 9.8
    required: true
  - name: ac
    description:
      en: AC Power [kW]
      de: AC Leistung [kW]
    help:
      en: "max power of the inverter in kW. default: no limit"
      de: "maximale Leistung des Wechselrichters in kW. standard: kein limit"
    type: float
    example: 9.8
    advanced: true
  - name: efficiency
    description:
      en: Inverter efficiency [%]
      de: Wechselrichterwirkungsgrad [%]
    help:
      en: "The inverter efficiency. default: 100 (%)"
      de: "Der Wirkungsgrad des Wechselrichters standard: 100 (%)"
    type: int
    example: 96
    advanced: true
  - name: alphatemp
    description:
      en: Temperature coefficient
      de: Temperaturkoeffizient
    help:
      en: "The Temperatur coefficient is used for calculate losses with the temperature of the modules. default: -0.004"
      de: "Die Temperaturkoeffizient der PV-Modulzellen wird zur Berechnung der Verluste in Abhängigkeit von der Temperatur der Module verwendet. standard: -0.004"
    type: float
    example: -0.004
    advanced: true
  - name: albedo
    description:
      en: albedo
      de: Albedo
    help:
      en: "albedo value of the modules. default: 0.2"
      de: "Albedowert der Module. standard: 0.2"
    type: float
    example: 0.2
    advanced: true
  - name: range
    description:
      en: weathermodel variation
      de: Wettermodellvariation
    help:
      en: "returns max- and min- generation from different weathermodels. default: 0"
      de: "liefert Max- und Min- Erzeugung aus verschiedenen Wettermodellen. standard: 0"
    type: int
    example: 0
    advanced: true
  - name: horizon
    description:
      en: simulate terrain shadows
      de: Simuliert Verschattung durch Umgebung
    help:
      en: Each number representing the horizon height in degrees. see https://api.akkudoktor.net/#/pv%20generation%20calculation/getForecast and  https://doc.forecast.solar/horizon
      de: Jede Zahl steht für die Horizonthöhe in Grad. Siehe https://api.akkudoktor.net/#/pv%20generation%20calculation/getForecast und https://doc.forecast.solar/horizon
    type: string
    example: "10,0,10,15"
    advanced: true
  - name: interval
    default: 1h
    advanced: true
render: |
  type: custom
  tariff: solar
  forecast:
    source: http
    uri: "https://api.akkudoktor.net/forecast?lat={{ .lat }}\
      &lon={{ .lon }}\
      &power={{ mulf .kwp 1000 }}\
      &azimuth={{ .az }}\
      &tilt={{ .dec }}\
      &past_days=0\
      &timecycle=hourly\
      &timezone=UTC\
      {{ if .alphatemp }}&cellCoEff={{ mulf .alphatemp 100 }}{{ end }}\
      {{ if .albedo }}&albedo={{ .albedo }}{{ end }}\
      {{ if .ac }}&powerInverter={{ mulf .ac 1000 }}{{ end }}\
      {{ if .efficiency }}&inverterEfficiency={{ divf .efficiency 100 }}{{ end }}\
      {{ if .horizon }}&horizont={{ .horizon | urlEncode }}{{ end }}\
      {{ if .range }}&range={{ .range | ceil }}{{ end }}"
    jq: |
      [ .values[][] | {
        start: (.datetime | sub("\\.[0-9]+"; "") | strptime("%FT%T%z") | strftime("%FT%TZ")),
        end: (.datetime | sub("\\.[0-9]+"; "") | strptime("%FT%T%z") | mktime + 3600 | strftime("%FT%TZ")),
        price: .power
      } ] | tostring
  interval: {{ .interval }}
